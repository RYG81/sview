/**
 * EDimensional interlace activation fragment shader.
 * Copyright Â© 2009 Kirill Gavrilov <kirill@sview.ru>
 *
 * StOutInterlace library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * StOutInterlace library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 * If not, see <http://www.gnu.org/licenses/>.
 */

uniform int vpSizeY;
void main(void) {
    // compute current computing pixel Y coordinate from top
    int yFromTop = vpSizeY - int(floor(gl_FragCoord.y - 0.5)) - 1;

    // just simple color codes for ED on top
    if(yFromTop == 0 || yFromTop == 1 || yFromTop == 8 || yFromTop == 9) {
        gl_FragColor = vec4(1, 0, 0, 1);
    } else if(yFromTop >= 4 && yFromTop <= 7) {
        gl_FragColor = vec4(1, 1, 0, 1);
    } else if(yFromTop == 2 || yFromTop == 3) {
        gl_FragColor = vec4(0, 1, 0, 1);
    } else {
        // set aplha channel to zero to draw unchanged pixels via Blending
        gl_FragColor = vec4(0, 0, 0, 0);
    }
}
